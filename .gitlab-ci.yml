stages:
  - build
  - deploy

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_CONTAINER_NAME: "locationSearch"
  DOCKER_CONTAINER_PORT: "9014"

cache:
  paths:
    - .m2/repository/
    - target/

before_script:
  - echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
    https://maven.apache.org/xsd/settings-1.0.0.xsd">
    <proxies>
    <!--proxy>
    <active>true</active>
    <host>10.0.1.8</host>
    <port>9014</port>
    </proxy>-->
    </proxies>
    <servers>
    <server>
    <id>StagingServer8888</id>
    <username>tomcat</username>
    <password>s3cret</password>
    </server>
    <server>
    <id>ProductionServer8889</id>
    <username>tomcat</username>
    <password>s3cret</password>
    </server>
    </servers>
    </settings>' > $HOME/.m2/settings.xml

docker_build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "Setting up for Docker build..."
    - mkdir -p target/classes/tessdata/configs/alto
    - chmod -R 755 target/classes/tessdata/configs/alto
    - ls -l target/classes/tessdata/configs
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build --no-cache --tag $CI_REGISTRY_IMAGE:latest -f .docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:latest

docker_deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "Setting up for Docker deploy..."
    - mkdir -p target/classes/tessdata/configs/alto
    - chmod -R 755 target/classes/tessdata/configs/alto
    - ls -l target/classes/tessdata/configs
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker stop $CI_PROJECT_NAME || true
    - docker rm $CI_PROJECT_NAME || true
    - docker rmi $CI_REGISTRY_IMAGE:latest || true
    - docker pull $CI_REGISTRY_IMAGE:latest
  script:
    - docker stop $DOCKER_CONTAINER_NAME || true
    - docker rm $DOCKER_CONTAINER_NAME || true
    - docker run -d --label io.portainer.accesscontrol.teams=eis2024 --name $DOCKER_CONTAINER_NAME -p $DOCKER_CONTAINER_PORT:8080 $CI_REGISTRY_IMAGE:latest








